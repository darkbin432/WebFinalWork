<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hznu.lwb.persistence.ActivityDao">

    <insert id="insertInfo" parameterType="com.hznu.lwb.model.Activity" useGeneratedKeys="true" keyProperty="id">
		insert into activity(project_id, create_member_scope_id,approval_id, check_status, title,initiator_id,  head_member_id, activity_area, start_time, end_time,enroll_time, huiyuan_limit,volunteer_limit, description, attachment, summary, created_time, updated_time, version, status)
		values (#{projectId}, #{createMemberScopeId},#{approvalId}, #{checkStatus}, #{title}, #{initiatorId}, #{headMemberId}, #{activityArea}, #{startTime}, #{endTime}, #{enrollTime}, #{huiyuanLimit}, #{volunteerLimit}, #{description}, #{attachment}, #{summary}, now(), now(), #{version}, #{status})
	</insert>

    <insert id="insertRelationship" parameterType="hashmap" useGeneratedKeys="true" keyProperty="id">
        insert into activity_scope_relationship(activity_id,scope_id,created_time,updated_time,version,status)
		values (#{activityId},#{scopeId},now(),now(),#{version},#{status});
    </insert>

    <select id="getOne" parameterType="int" resultType="com.hznu.lwb.model.Activity">
        SELECT *,
        (SELECT COUNT(huiyuan_activity.id) FROM huiyuan_activity WHERE huiyuan_activity.activity_id = activity.id AND
        huiyuan_activity.status = 1) AS huiyuan_count,
        (SELECT organization.name FROM organization_member, organization WHERE activity.head_member_id =
        organization_member.id AND organization_member.organization_id = organization.id) AS organization_name,
        (SELECT organization_member.name FROM organization_member WHERE activity.head_member_id =
        organization_member.id) AS head_member_name,
        (SELECT organization_member.type FROM organization_member WHERE activity.head_member_id =
        organization_member.id) AS head_member_type
        FROM activity LEFT JOIN activity_scope_relationship ON activity.id = activity_scope_relationship.activity_id
		where activity.id = #{id} and activity.status = 1
		limit 1;
    </select>

    <update id="updateInfo" parameterType="com.hznu.lwb.model.Activity">
        update activity
        set
        <if test="approvalId!=null">
            approval_id = #{approvalId},
        </if>
        <if test="checkStatus!=null">
            check_status = #{checkStatus},
        </if>
        <if test="title!=null">
            title = #{title},
        </if>
        <if test="headMemberId!=null">
            head_member_id = #{headMemberId},
        </if>
        <if test="activityArea!=null">
            activity_area = #{activityArea},
        </if>
        <if test="startTime!=null">
            start_time = #{startTime},
        </if>
        <if test="endTime!=null">
            end_time = #{endTime},
        </if>
        <if test="enrollTime != null">
            enroll_time = #{enrollTime},
        </if>
        <if test="huiyuanLimit!=null">
            huiyuan_limit = #{huiyuanLimit},
        </if>
        <if test="volunteerLimit!=null">
            volunteer_limit = #{volunteerLimit},
        </if>
        <if test="description!=null">
            description = #{description},
        </if>
        <if test="attachment!=null">
            attachment = #{attachment},
        </if>
        <if test="summary!=null">
            summary = #{summary},
        </if>
        <if test="version!=null">
            version = #{version},
        </if>
        <if test="status!=null">
            status = #{status},
        </if>
        <if test="summaryImage!=null">
            summary_image = #{summaryImage},
        </if>
        updated_time = now()
        where id = #{id};
    </update>

    <update id="updateRelationship" parameterType="com.hznu.lwb.model.Activity">
        update activity_scope_relationship
        set
        <if test="scopeId!=null">
            scope_id = #{scopeId},
        </if>
        updated_time = now()
        where activity_id = #{id};
    </update>

    <update id="deleteInfo" parameterType="int">
		update activity
		set status = 0,
		updated_time = now()
		where id = #{id}
	</update>

    <update id="deleteRelationship" parameterType="int">
		update activity_scope_relationship
		set status = 0,
		updated_time = now()
		where activity_id = #{id}
	</update>

    <select id="getPageCount" parameterType="hashmap" resultType="int">
        SELECT COUNT(DISTINCT activity.id) FROM activity
        LEFT JOIN activity_scope_relationship ON activity.id = activity_scope_relationship.activity_id
        <where>
            activity.status = 1
            -- activity.status = 1 AND activity_scope_relationship.status = 1
            <if test="isFiled!=null">
                AND is_filed = #{isFiled}
            </if>
            <if test="projectId!=null">
                AND activity.project_id = #{projectId}
            </if>
            <if test="title != null">
                AND activity.title LIKE "%"#{title}"%"
            </if>
            <if test="scopeId!=null and scopeId!=0">
                AND create_member_scope_id = #{scopeId}
            </if>
            <if test="userId != null">
                AND (check_status = 3 OR check_status = 1 OR (initiator_id = #{userId}))
            </if>
        </where>
    </select>

    <select id="selectActivityInfo" parameterType="hashmap" resultType="com.hznu.lwb.model.Activity">
        SELECT DISTINCT activity.*,
        (SELECT COUNT(huiyuan_activity.id) FROM huiyuan_activity WHERE huiyuan_activity.activity_id = activity.id AND
        huiyuan_activity.status = 1) AS huiyuan_count,
        (SELECT organization.name FROM organization_member, organization WHERE activity.head_member_id =
        organization_member.id AND organization_member.organization_id = organization.id) AS organization_name,
        (SELECT organization_scope_relationship.name
        FROM activity_scope_relationship AS ASR LEFT JOIN organization_scope_relationship ON ASR.scope_id =
        organization_scope_relationship.scope_id
        WHERE ASR.status = 1 AND ASR.activity_id = activity.id
        LIMIT 1) AS one_organization_name
        FROM activity LEFT JOIN activity_scope_relationship ON activity.id = activity_scope_relationship.activity_id
        <where>
            activity.status = 1
            -- activity.status = 1 AND activity_scope_relationship.status = 1
            <if test="isFiled!=null">
                AND is_filed = #{isFiled}
            </if>
            <if test="projectId!=null">
                AND activity.project_id = #{projectId}
            </if>
            <if test="title!=null">
                AND activity.title LIKE "%"#{title}"%"
            </if>
            <if test="scopeId!=null and scopeId!=0">
                AND create_member_scope_id = #{scopeId}
            </if>

            <if test="userId != null">
                AND (check_status = 3 OR check_status = 1 OR (initiator_id = #{userId}))
            </if>

        </where>
        ORDER BY activity.start_time DESC
        <if test="offset!=null and size!=null">
            LIMIT #{offset},#{size};
        </if>
    </select>

    <select id="getAcitvityVounteers" parameterType="hashmap" resultType="com.hznu.lwb.model.HuiyuanActivity">
        SELECT * FROM huiyuan LEFT JOIN huiyuan_activity ON huiyuan.id = huiyuan_activity.huiyuan_id
        <where>
            huiyuan.status = 1 AND huiyuan_activity.status = 1
            <if test="activityId != null">
                AND huiyuan_activity.activity_id = #{activityId}
            </if>
            <if test="volunteerApplyStatus != null">
                AND volunteer_apply_status = #{volunteerApplyStatus}
            </if>
            <if test="volunteerApplyStatus == null">
                AND volunteer_apply_status BETWEEN 0 AND 2
            </if>
        </where>
        ORDER BY huiyuan_activity.id DESC
    </select>

    <select id="getVolunteerPageCount" parameterType="hashmap" resultType="int">
        SELECT COUNT(*) FROM huiyuan LEFT JOIN huiyuan_activity ON huiyuan.id = huiyuan_activity.huiyuan_id
        <where>
            huiyuan.status = 1 AND huiyuan_activity.status = 1
            <if test="activityId != null">
                AND huiyuan_activity.activity_id = #{activityId}
            </if>
        </where>
    </select>

    <select id="getAcitvityVounteer" parameterType="hashmap" resultType="com.hznu.lwb.model.Huiyuan">
        SELECT * FROM huiyuan LEFT JOIN huiyuan_activity ON huiyuan.id = huiyuan_activity.huiyuan_id
        <where>
            huiyuan.status = 1 AND huiyuan_activity.status = 1 AND huiyuan_activity.activity_id = #{activityId} AND
            huiyuan.id = #{huiyuanId}
        </where>
        limit 1
    </select>

    <update id="updateAcvivityVolunteer" parameterType="hashmap">
        update huiyuan_activity
        set
        <if test="volunteerApplyStatus!=null">
            volunteer_apply_status = #{volunteerApplyStatus},
        </if>
        updated_time = now()
        <where>
            huiyuan_id = #{huiyuanId} and activity_id = #{activityId} and status = 1
        </where>
    </update>

    <select id="getOneProject" parameterType="int" resultType="com.hznu.lwb.model.Project">
        select * from project where id = #{id};
    </select>

    <select id="getAllProject" resultType="com.hznu.lwb.model.Project">
        SELECT *
        FROM project
        WHERE status = 1;
    </select>

    <update id="updateActivityCheckStatus" parameterType="hashmap">
        update activity
        set
        <if test="checkStatus!=null">
            check_status = #{checkStatus},
        </if>
        updated_time = now()
        <where>
            id = #{id}
        </where>
    </update>

    <select id="getApprovalPageCount" parameterType="hashmap" resultType="int">
        SELECT COUNT(activity.id)
        FROM activity
        <where>
            activity.status = 1
            AND activity.check_status = 0
            <if test="approvalId!=null">
                AND activity.approval_id = #{approvalId};
            </if>
        </where>
    </select>

    <select id="getApprovalInfo" parameterType="hashmap" resultType="com.hznu.lwb.model.Activity">
        SELECT *,
        (SELECT organization_member.id FROM organization_member WHERE organization_member.id = activity.initiator_id) AS
        create_member_id,
        (SELECT organization_member.name FROM organization_member WHERE organization_member.id = activity.initiator_id)
        AS create_member_name,
        (SELECT organization_member.username FROM organization_member WHERE organization_member.id =
        activity.initiator_id) AS create_member_username
        FROM activity
        <where>
            activity.status = 1
            AND activity.check_status = 0
            <if test="approvalId!=null">
                AND activity.approval_id = #{approvalId}
            </if>
        </where>
        ORDER BY activity.id DESC
        <if test="offset!=null and size!=null">
            limit #{offset},#{size};
        </if>
    </select>

    <select id="getUnsolvedApproval" parameterType="int" resultType="int">
        SELECT COUNT(activity.id)
        FROM activity
        <where>
            activity.status = 1
            AND activity.check_status = 0
            AND activity.approval_id = #{approvalId};
        </where>
    </select>

    <insert id="insertRecord" parameterType="com.hznu.lwb.model.ActivityApprovalRecord">
        insert into activity_approval_record
        <trim prefix="(" suffix=")" suffixOverrides=",">
            activity_id,approval_id,approval_name,result,created_time,updated_time,status
            <if test="version != null">
                ,version
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            #{activityId},#{approvalId},#{approvalName},#{result},now(),now(),1
            <if test="version != null">
                ,#{version}
            </if>
        </trim>
    </insert>

    <select id="getActivityApprovalRecordPageCount" parameterType="com.hznu.lwb.model.param.ApprovalParam"
            resultType="Integer">
      select count(*) from activity_approval_record
      where approval_id = #{approvalId} and status = 1;
  </select>

    <select id="getActivityApprovalRecord" parameterType="com.hznu.lwb.model.param.ApprovalParam"
            resultType="com.hznu.lwb.model.ActivityApprovalRecord">
        select aar.*,activity.title as title,activity.initiator_id as create_member_id,
        (SELECT organization_member.name FROM organization_member WHERE organization_member.id = activity.initiator_id)
        AS create_member_name
        from activity_approval_record aar left join activity on aar.activity_id = activity.id
        where aar.approval_id = #{approvalId} and aar.status = 1
        order by aar.created_time desc
        <if test="offset!=null and size!=null">
            limit #{offset},#{size};
        </if>
    </select>

    <select id="getOneScope" parameterType="int" resultType="int">
        SELECT scope_id
        FROM activity_scope_relationship
        WHERE activity_id = #{activityId} AND status = 1;
    </select>

    <update id="deleteScope" parameterType="int">
        UPDATE activity_scope_relationship
        SET status = 0,
        updated_time = now()
        WHERE activity_id = #{activityId};
    </update>

    <sql id="whereAll">
        <where>
            activity.status = 1
            and
             (activity.check_status=1 or activity.check_status=3)
        </where>
    </sql>
    <select id="selectByHuiyuan" resultType="Activity">
        SELECT
        activity.*,
        sum(case ha.volunteer_apply_status when 3 then 1 else 0 end) as huiyuan_count,
        sum(case ha.volunteer_apply_status when 1 then 1 else 0 end) as volunteer_count,
        (select count(id) from huiyuan_activity where huiyuan_id=#{huiyuanId} and status=1 and
        activity_id=ha.activity_id and volunteer_apply_status!=2) as has_signed
        FROM activity
        left join huiyuan_activity ha on ha.activity_id=activity.id
        <include refid="whereAll"/>
        group by activity.id
        order by activity.start_time desc
        limit #{offset}, #{size}
    </select>

    <select id="countAll" resultType="int">
        SELECT COUNT(activity.id) FROM activity
        <include refid="whereAll"/>
    </select>

    <select id="selectRecordByHuiyuan" resultType="Activity">
        SELECT
        activity.*,
        (case ha.volunteer_apply_status when 2 then 0 else 1 end) as has_signed,
        ha.volunteer_apply_status,
        (select count(id) from huiyuan_activity where status=1 and volunteer_apply_status=3) as huiyuan_count,
        (select count(id) from huiyuan_activity where status=1 and volunteer_apply_status!=3) as volunteer_count
        FROM activity
        left join huiyuan_activity ha on (ha.activity_id=activity.id)
        <where>
            activity.status = 1
            and
            (activity.check_status=1 or activity.check_status=3)
            and (ha.huiyuan_id=#{huiyuanId} and ha.status=1)
            <if test="volunteerApplyStatus==3">
                and ha.volunteer_apply_status=3
            </if>
            <if test="volunteerApplyStatus!=3">
                and ha.volunteer_apply_status!=3
            </if>
        </where>
        order by activity.start_time desc
        limit #{offset}, #{size}
    </select>


    <select id="selectOneByHuiyuan" resultType="Activity">
        SELECT
        activity.*,
        (select count(id) from huiyuan_activity where status=1 and volunteer_apply_status=3 and activity.id=huiyuan_activity.activity_id ) as huiyuan_count,
        (select count(id) from huiyuan_activity where status=1 and volunteer_apply_status!=3 and activity.id=huiyuan_activity.activity_id) as volunteer_count,
        ha.volunteer_apply_status,
        (CASE when ha.id is not NULL
        THEN (
        case when ha.volunteer_apply_status!=2 then 1
        else 0 end
        )
         ELSE 0 END) AS has_signed
        FROM activity
        left join huiyuan_activity ha on (
        ha.activity_id=activity.id AND ha.huiyuan_id =#{huiyuanId}
        and ha.status=1
        )
        <where>
            activity.status = 1
            and activity.id=#{id}
        </where>
    </select>

    <update id="updateActivityFiled" parameterType="int">
        UPDATE activity
        SET is_filed = #{isFiled}
        WHERE id = #{id};
    </update>
</mapper>
